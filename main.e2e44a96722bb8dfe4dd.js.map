{"version":3,"sources":["webpack:///./scripts/refs.js","webpack:///./data/colors.js","webpack:///./scripts/controlButton.js","webpack:///./index.js","webpack:///./scripts/randomIndex.js"],"names":["startButton","document","querySelector","stopButton","body","intervalId","isStarting","refs","addEventListener","setInterval","min","max","style","backgroundColor","colors","length","Math","floor","random","clearInterval"],"mappings":"uIAAe,GACbA,YAAaC,SAASC,cAAc,+BACpCC,WAAYF,SAASC,cAAc,8BACnCE,KAAMH,SAASC,cAAc,SCHhB,GACb,UACA,UACA,UACA,UACA,UACA,WCFEG,EAAa,KACbC,GAAa,ECDjBC,EAAKP,YAAYQ,iBAAiB,SDGd,WACbF,IACHA,GAAa,EACbD,EAAaI,aAAY,WEVd,IAACC,EAAKC,EFWfJ,EAAKH,KAAKQ,MAAMC,gBACdC,GEZQJ,EFYyB,EEZpBC,EFYuBG,EAAOC,OEX1CC,KAAKC,MAAMD,KAAKE,UAAYP,EAAMD,EAAM,GAAKA,OFY/C,SCRPH,EAAKJ,WAAWK,iBAAiB,SDYd,WACjBF,GAAa,EACba,cAAcd,Q","file":"main.e2e44a96722bb8dfe4dd.js","sourcesContent":["export default {\r\n  startButton: document.querySelector('button[data-action=\"start\"]'),\r\n  stopButton: document.querySelector('button[data-action=\"stop\"]'),\r\n  body: document.querySelector('body'),\r\n};","export default [\r\n  \"#FFFFFF\",\r\n  \"#2196F3\",\r\n  \"#4CAF50\",\r\n  \"#FF9800\",\r\n  \"#009688\",\r\n  \"#795548\"\r\n]\r\n","import randomIntegerFromInterval from './randomIndex';\r\nimport colors from '../data/colors';\r\nimport refs from './refs';\r\n\r\nlet intervalId = null;\r\nlet isStarting = false;\r\n\r\nconst handleStart = function () {\r\n  if (!isStarting) {\r\n    isStarting = true;\r\n    intervalId = setInterval(() => {\r\n      refs.body.style.backgroundColor =\r\n        colors[randomIntegerFromInterval(0, colors.length)];\r\n    }, 1000);\r\n  }\r\n};\r\n\r\nconst handleStop = function () {\r\n  isStarting = false;\r\n  clearInterval(intervalId);\r\n};\r\n\r\nexport { handleStart, handleStop };","import './styles.css';\nimport refs from './scripts/refs';\nimport { handleStart, handleStop } from './scripts/controlButton'\n\nrefs.startButton.addEventListener('click', handleStart);\nrefs.stopButton.addEventListener('click', handleStop);\n","export default (min, max) => {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n};\r\n"],"sourceRoot":""}